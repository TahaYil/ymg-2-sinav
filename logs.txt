Started by GitHub push by TahaYil
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in /Users/tahay/.jenkins/workspace/sınavdeneme
[Pipeline] {
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Repo Klonla)
[Pipeline] git
The recommended git tool is: NONE
No credentials specified
 > git rev-parse --resolve-git-dir /Users/tahay/.jenkins/workspace/sınavdeneme/.git # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url https://github.com/TahaYil/ymg-2-sinav.git # timeout=10
Fetching upstream changes from https://github.com/TahaYil/ymg-2-sinav.git
 > git --version # timeout=10
 > git --version # 'git version 2.39.3 (Apple Git-146)'
 > git fetch --tags --force --progress -- https://github.com/TahaYil/ymg-2-sinav.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/main^{commit} # timeout=10
Checking out Revision 94cc04396d63ae15ba5667f932a1e77fa1c5eccb (refs/remotes/origin/main)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 94cc04396d63ae15ba5667f932a1e77fa1c5eccb # timeout=10
 > git branch -a -v --no-abbrev # timeout=10
 > git branch -D main # timeout=10
 > git checkout -b main 94cc04396d63ae15ba5667f932a1e77fa1c5eccb # timeout=10
Commit message: "Create Jenkinsfile"
 > git rev-list --no-walk 5d4362458d12561344e47febe889f8b1bc921a65 # timeout=10
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Docker Image Oluştur)
[Pipeline] echo
Docker image oluşturuluyor...
[Pipeline] sh
+ docker build -t deneme-image .
#0 building with "desktop-linux" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 164B done
#1 DONE 0.0s

#2 [auth] library/nginx:pull token for registry-1.docker.io
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/nginx:alpine
#3 DONE 1.2s

#4 [internal] load .dockerignore
#4 transferring context: 2B done
#4 DONE 0.0s

#5 [1/3] FROM docker.io/library/nginx:alpine@sha256:4ff102c5d78d254a6f0da062b3cf39eaf07f01eec0927fd21e219d0af8bc0591
#5 resolve docker.io/library/nginx:alpine@sha256:4ff102c5d78d254a6f0da062b3cf39eaf07f01eec0927fd21e219d0af8bc0591 0.0s done
#5 DONE 0.0s

#6 [internal] load build context
#6 transferring context: 68B done
#6 DONE 0.0s

#7 [2/3] COPY index.html /usr/share/nginx/html/index.html
#7 CACHED

#8 [3/3] WORKDIR /app
#8 CACHED

#9 exporting to image
#9 exporting layers done
#9 exporting manifest sha256:6434716eb72037361a3a2d0bf095acbd913a094da5927556bfa435e7e1101188 done
#9 exporting config sha256:d83af15f4871336fccffa62c24b8c4f0fdf2dd0702cc18758936c01b29081655 done
#9 exporting attestation manifest sha256:4d5df7a5ff29b314ec90b0f1b4bbb532a5ff204d241070afcc1befc537aca694 done
#9 exporting manifest list sha256:6ed5ad35f062861ebb72f1ca4f13b876916593256c34c4bec1f5f805e9adeb0c done
#9 naming to docker.io/library/deneme-image:latest done
#9 unpacking to docker.io/library/deneme-image:latest done
#9 DONE 0.0s

View build details: docker-desktop://dashboard/build/desktop-linux/desktop-linux/kbeoxjsmtndv3kmcaibtw4ief
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Konteyner Durdur)
[Pipeline] echo
Var olan konteyner durduruluyor (eğer varsa)...
[Pipeline] sh
+ docker rm -f test-nginx
test-nginx
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Konteyner Oluştur)
[Pipeline] echo
Yeni konteyner oluşturuluyor...
[Pipeline] sh
+ docker run -d --name test-nginx -p 4444:80 deneme-image
4c31b2312c3fc82faad01da3dababeca0c877bf563e8e2ee78e862811012e57b
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Declarative: Post Actions)
[Pipeline] echo
Pipeline başarıyla tamamlandı!
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: SUCCESS
